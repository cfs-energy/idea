name: 'Setup Development Environment'
description: 'Sets up Python, Node.js, AWS CDK, and development dependencies from software_versions.yml'
outputs:
  python-version:
    description: 'The Python version that was installed'
    value: ${{ steps.versions.outputs.python_version }}
  node-version:
    description: 'The Node.js version that was installed'
    value: ${{ steps.versions.outputs.node_version }}
  aws-cdk-version:
    description: 'The AWS CDK version that was installed'
    value: ${{ steps.versions.outputs.aws_cdk_version }}
runs:
  using: 'composite'
  steps:
    - name: Read software versions
      id: versions
      shell: bash
      run: |
        python_version=$(grep '^python_version:' software_versions.yml | cut -d' ' -f2)
        node_version=$(grep '^node_version:' software_versions.yml | cut -d' ' -f2)
        aws_cdk_version=$(grep '^aws_cdk_version:' software_versions.yml | cut -d' ' -f2)
        echo "python_version=$python_version" >> $GITHUB_OUTPUT
        echo "node_version=$node_version" >> $GITHUB_OUTPUT
        echo "aws_cdk_version=$aws_cdk_version" >> $GITHUB_OUTPUT
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '${{ steps.versions.outputs.python_version }}'
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '${{ steps.versions.outputs.node_version }}'
    - name: Install AWS CLI
      shell: bash
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - name: Install system dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libldap2-dev libsasl2-dev coreutils locales
    - name: Configure locale
      shell: bash
      run: |
        sudo locale-gen en_US.UTF-8
        sudo update-locale LANG=en_US.UTF-8
        echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
        echo "LC_CTYPE=en_US.UTF-8" >> $GITHUB_ENV
        echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
    - name: Install AWS CDK
      shell: bash
      run: |
        mkdir -p ~/.idea/lib/idea-cdk && pushd ~/.idea/lib/idea-cdk
        npm init --force --yes
        npm install aws-cdk@${{ steps.versions.outputs.aws_cdk_version }} --save
        popd
    - name: Install Yarn
      shell: bash
      run: npm install -g yarn
    - name: Install json2ts
      shell: bash
      run: npm install -g json-schema-to-typescript
    - name: Install Java
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'
    - name: Cache virtual environment
      uses: actions/cache@v4
      id: cache-venv
      with:
        path: venv
        key: venv-${{ runner.os }}-${{ steps.versions.outputs.python_version }}-${{ hashFiles('requirements/dev.txt') }}
        restore-keys: |
          venv-${{ runner.os }}-${{ steps.versions.outputs.python_version }}-
    - name: Create virtual environment
      if: steps.cache-venv.outputs.cache-hit != 'true'
      shell: bash
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -r requirements/dev.txt
    - name: Activate virtual environment
      shell: bash
      run: |
        echo "VIRTUAL_ENV=$PWD/venv" >> $GITHUB_ENV
        echo "$PWD/venv/bin" >> $GITHUB_PATH
