# Begin: DCV Server

DCV_GPG_KEY_DCV_SERVER="{{ context.config.get_string('global-settings.package_config.dcv.gpg_key', required=True) }}"
{%- if context.base_os in ('amazonlinux2', 'centos7', 'rhel7') %}
DCV_SERVER_X86_64_URL="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.al2_rhel_centos7.url', required=True) }}"
DCV_SERVER_X86_64_TGZ="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.al2_rhel_centos7.tgz', required=True) }}"
DCV_SERVER_X86_64_VERSION="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.al2_rhel_centos7.version', required=True) }}"
DCV_SERVER_X86_64_SHA256_HASH="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.al2_rhel_centos7.sha256sum', required=True) }}"

DCV_SERVER_AARCH64_URL="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.al2_rhel_centos7.url', required=True) }}"
DCV_SERVER_AARCH64_TGZ="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.al2_rhel_centos7.tgz', required=True) }}"
DCV_SERVER_AARCH64_VERSION="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.al2_rhel_centos7.version', required=True) }}"
DCV_SERVER_AARCH64_SHA256_HASH="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.al2_rhel_centos7.sha256sum', required=True) }}"

{%- elif context.base_os in ('rhel8', 'rocky8') %}
DCV_SERVER_X86_64_URL="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky8.url', required=True) }}"
DCV_SERVER_X86_64_TGZ="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky8.tgz', required=True) }}"
DCV_SERVER_X86_64_VERSION="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky8.version', required=True) }}"
DCV_SERVER_X86_64_SHA256_HASH="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky8.sha256sum', required=True) }}"

DCV_SERVER_AARCH64_URL="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky8.url', required=True) }}"
DCV_SERVER_AARCH64_TGZ="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky8.tgz', required=True) }}"
DCV_SERVER_AARCH64_VERSION="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky8.version', required=True) }}"
DCV_SERVER_AARCH64_SHA256_HASH="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky8.sha256sum', required=True) }}"

{%- elif context.base_os in ('amazonlinux2023', 'rhel9', 'rocky9') %}
  DCV_SERVER_X86_64_URL="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky9.url', required=True) }}"
  DCV_SERVER_X86_64_TGZ="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky9.tgz', required=True) }}"
  DCV_SERVER_X86_64_VERSION="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky9.version', required=True) }}"
  DCV_SERVER_X86_64_SHA256_HASH="{{ context.config.get_string('global-settings.package_config.dcv.host.x86_64.linux.rhel_centos_rocky9.sha256sum', required=True) }}"

  DCV_SERVER_AARCH64_URL="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky9.url', required=True) }}"
  DCV_SERVER_AARCH64_TGZ="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky9.tgz', required=True) }}"
  DCV_SERVER_AARCH64_VERSION="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky9.version', required=True) }}"
  DCV_SERVER_AARCH64_SHA256_HASH="{{ context.config.get_string('global-settings.package_config.dcv.host.aarch64.linux.rhel_centos_rocky9.sha256sum', required=True) }}"
{%- endif %}

log_info "Installing GPU drivers"
{% if context.is_gpu_instance_type() -%}
  sudo rm -rf /etc/X11/XF86Config*
  {%- include '_templates/linux/gpu_drivers.jinja2' %}
{% else -%}
  log_info "GPU InstanceType not detected. Skipping GPU driver installation."
{% endif -%}

{%- if not context.is_gpu_instance_type() and context.vars.session.type.lower() == 'console' %}
  {%- include '_templates/linux/x_dummy_driver.jinja2' %}
install_x_dummy_driver
{%- endif %}

if [[ -z "$(rpm -qa gnome-terminal)" ]]; then
{% if context.base_os == 'amazonlinux2' -%}
  DCV_AMAZONLINUX_PKGS=({{ ' '.join(context.config.get_list('global-settings.package_config.linux_packages.dcv_amazonlinux', required=True)) }})
  yum install -y $(echo ${DCV_AMAZONLINUX_PKGS[*]})
{% elif context.base_os in ('rhel7') -%}
  # RHEL 7.x
  yum groups mark convert
  yum groupinstall "Server with GUI" -y --skip-broken
{% elif context.base_os in ('rhel8', 'rhel9', 'rocky8', 'rocky9') %}
  EXCLUDE=()
  {%- if context.is_amd_gpu() %}
  # Don't upgrade the kernel and kernel packages to higher versions as AMD GPU driver support is dependent on the kernel version
  EXCLUDE=('kernel*el8_8*')
  {%- endif %}
  printf -v EXCLUDE_JOINED '%s,' "${EXCLUDE[@]}"
  yum --exclude=${EXCLUDE_JOINED%,} groupinstall "Server with GUI" -y --skip-broken --disablerepo=epel-cisco-openh264

  sed -i 's/#WaylandEnable=false/WaylandEnable=false/' /etc/gdm/custom.conf
  systemctl restart gdm
  # The following is a workaroud to disable the pop-up "Authentication required to refresh system repositories"
  # see details in https://bugzilla.redhat.com/show_bug.cgi?id=1857654
    echo "[Disable Package Management all Users]
Identity=unix-user:*
Action=org.freedesktop.packagekit.system-sources-refresh
ResultAny=no
ResultInactive=no
ResultActive=no" > /etc/polkit-1/localauthority/50-local.d/repos.pkla
    systemctl restart polkit
   # The next commands remove the "System Not Registered" notification
   # see details in https://access.redhat.com/solutions/6976776
   sed -i 's,Exec=/usr/libexec/gsd-subman,#Exec=/usr/libexec/gsd-subman,' /etc/xdg/autostart/org.gnome.SettingsDaemon.Subscription.desktop
   sed -i 's,ExecStart=/usr/libexec/gsd-subman,#ExecStart=/usr/libexec/gsd-subman,' /lib/systemd/user/org.gnome.SettingsDaemon.Subscription.service
   yum -y remove subscription-manager-cockpit
{% elif context.base_os == 'centos7' -%}
  # CentOS 7.x
  yum groups mark convert
  yum groupinstall "GNOME Desktop" -y --skip-broken
{% endif -%}
else
  log_info "Found gnome-terminal pre-installed... skipping dcv prereq installation..."
fi

rpm --import ${DCV_GPG_KEY_DCV_SERVER}
machine=$(uname -m) #x86_64 or aarch64
DCV_SERVER_URL=""
DCV_SERVER_TGZ=""
DCV_SERVER_VERSION=""
DCV_SERVER_SHA256_HASH=""
if [[ $machine == "x86_64" ]]; then
  # x86_64
  DCV_SERVER_URL=${DCV_SERVER_X86_64_URL}
  DCV_SERVER_TGZ=${DCV_SERVER_X86_64_TGZ}
  DCV_SERVER_VERSION=${DCV_SERVER_X86_64_VERSION}
  DCV_SERVER_SHA256_HASH=${DCV_SERVER_X86_64_SHA256_HASH}
else
  # aarch64
  DCV_SERVER_URL=${DCV_SERVER_AARCH64_URL}
  DCV_SERVER_TGZ=${DCV_SERVER_AARCH64_TGZ}
  DCV_SERVER_VERSION=${DCV_SERVER_AARCH64_VERSION}
  DCV_SERVER_SHA256_HASH=${DCV_SERVER_AARCH64_SHA256_HASH}
fi

if [[ -z "$(rpm -qa nice-dcv-server)" ]]; then
  wget ${DCV_SERVER_URL}
  if [[ $(sha256sum ${DCV_SERVER_TGZ} | awk '{print $1}') != ${DCV_SERVER_SHA256_HASH} ]];  then
      echo -e "FATAL ERROR: Checksum for DCV Server failed. File may be compromised." > /etc/motd
      exit 1
  fi
  tar zxvf ${DCV_SERVER_TGZ}

  pushd nice-dcv-${DCV_SERVER_VERSION}
  {% if context.base_os == 'amazonlinux2' -%}
    rpm -ivh nice-xdcv-*.${machine}.rpm
    rpm -ivh nice-dcv-server-*.${machine}.rpm
    rpm -ivh nice-dcv-web-viewer-*.${machine}.rpm
  {% elif context.base_os in ('amazonlinux2023', 'rhel7', 'centos7', 'rhel8', 'rhel9', 'rocky8', 'rocky9') -%}
    rpm -ivh nice-xdcv-*.${machine}.rpm --nodeps
    rpm -ivh nice-dcv-server-*.${machine}.rpm --nodeps
    rpm -ivh nice-dcv-web-viewer-*.${machine}.rpm --nodeps
  {% endif -%}

  {% if context.is_gpu_instance_type() -%}
    if [[ $machine == "x86_64" ]]; then
      echo "Detected GPU instance, adding support for nice-dcv-gl"
      rpm -ivh nice-dcv-gl*.x86_64.rpm
    fi
  {% endif -%}
  popd
  rm -rf nice-dcv-${DCV_SERVER_VERSION}
  rm -rf ${DCV_SERVER_TGZ}
else
  log_info "Found nice-dcv-server pre-installed... skipping installation..."
fi

{% if context.base_os == 'amazonlinux2' %}
  echo "Base os is {{ context.base_os }}. No need for firewall disabling"
{% else %}
  # RHEL 7.x/8.x and CentOS 7.x/8.x
  systemctl stop firewalld
  systemctl disable firewalld
{% endif -%}

# End: DCV Server
